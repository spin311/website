{
    "swagger": "2.0",
    "info": {
        "description": "Simple website API for sending emails and getting starred repos",
        "title": "Website API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/sendEmail": {
            "post": {
                "description": "Send an email with provided sender, subject, and body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Send an email",
                "parameters": [
                    {
                        "type": "string",
                        "example": "1",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Email object",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.HttpError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.HttpError"
                        }
                    }
                }
            }
        },
        "/starredRepos": {
            "get": {
                "description": "Get a list of starred repositories for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitHub"
                ],
                "summary": "Get starred repositories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GithubRepo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Email": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "models.GithubRepo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "forks_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stargazers_count": {
                    "type": "integer"
                }
            }
        },
        "models.HttpError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "example: \"invalid identifier\"",
                    "type": "string"
                },
                "statusCode": {
                    "description": "example: 400",
                    "type": "integer"
                }
            }
        }
    }
}